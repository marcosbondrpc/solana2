# Infrastructure services only - custom services will be run separately
services:
    
  clickhouse:
    image: clickhouse/clickhouse-server:24.10
    container_name: clickhouse
    ports:
      - "0.0.0.0:8123:8123"
      - "0.0.0.0:9000:9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse-setup.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-arbitrage123}
      - CLICKHOUSE_DB=solana_arbitrage
    networks:
      - arbitrage-network
    restart: unless-stopped
    
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "0.0.0.0:6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --bind 0.0.0.0 --protected-mode no
    networks:
      - arbitrage-network
    restart: unless-stopped
    
  kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: kafka
    ports:
      - "0.0.0.0:9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - arbitrage-network
    restart: unless-stopped
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper
    ports:
      - "0.0.0.0:2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - arbitrage-network
    restart: unless-stopped
    
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    ports:
      - "0.0.0.0:9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - arbitrage-network
    restart: unless-stopped
    
  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    ports:
      - "0.0.0.0:3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_SERVER_HTTP_ADDR=0.0.0.0
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - clickhouse
    networks:
      - arbitrage-network
    restart: unless-stopped

networks:
  arbitrage-network:
    driver: bridge

volumes:
  clickhouse-data:
  redis-data:
  kafka-data:
  zookeeper-data:
  zookeeper-logs:
  prometheus-data:
  grafana-data: